name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  test-typescript:
    name: TypeScript Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v5
        with:
          node-version-file: .node-version
          cache: npm

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: Check Format
        id: npm-format-check
        run: npm run format:check

      - name: Lint
        id: npm-lint
        run: npm run lint

      - name: Test
        id: npm-ci-test
        run: npm run ci-test

  test-all-workflows:
    name: Test All Workflow Types
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test-case: ['default', 'hello-world', 'daily-activity']
        include:
          - test-case: 'default'
            workflow-type: ''
            test-name: 'Default User'
            expected-output: 'time'
            milliseconds: '2000'
            use-default: true
          - test-case: 'hello-world'
            workflow-type: 'hello-world'
            test-name: 'GitHub Actions'
            expected-output: 'message'
            use-default: false
          - test-case: 'daily-activity'
            workflow-type: 'daily-activity'
            test-name: 'Test User'
            expected-output: 'activity-summary'
            use-default: false

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v5

      - name: Test Local Action - ${{ matrix.test-case }}
        id: test-action
        uses: ./
        with:
          name: ${{ matrix.test-name }}
          workflow-type: ${{ matrix.use-default && '' || matrix.workflow-type }}

      - name: Print Output - ${{ matrix.test-case }}
        id: output
        env:
          OUTPUT_VALUE: ${{ steps.test-action.outputs[matrix.expected-output] }}
          TEST_CASE: ${{ matrix.test-case }}
        run: |
          echo "Output for ${TEST_CASE}:"
          echo "$OUTPUT_VALUE"
